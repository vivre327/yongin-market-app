{"version":3,"file":"js/159.67c519ce.js","mappings":"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","sources":["webpack://yongin-market-publish/./node_modules/prismjs/components/prism-javascript.js","webpack://yongin-market-publish/./node_modules/prismjs/prism.js","webpack://yongin-market-publish/./src/views/worklist/StyleGuide.vue","webpack://yongin-market-publish/./src/views/worklist/StyleGuide.vue?cbdd"],"sourcesContent":["Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","<template>\r\n  <div class=\"docs-container\">\r\n    <!-- 사이드바 -->\r\n    <aside class=\"docs-sidebar\" v-show=\"isSNB\">\r\n      <h1 class=\"docs-logo\"><i>💠</i>Yongin Market<br />Design System</h1>\r\n      <ul>\r\n        <li v-for=\"(item, index) in SidebarPubLinks\" :key=\"index\">\r\n          <a href=\"#\" @click.prevent=\"activePubComponent = item.component\" :class=\"{ active: activePubComponent === item.component }\">\r\n            <span v-if=\"item.del\"\r\n              ><del>{{ item.name }}</del></span\r\n            >\r\n            <span v-else>{{ item.name }}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </aside>\r\n\r\n    <!-- 메인 콘텐츠 -->\r\n    <main class=\"docs-main\" style=\"position: relative\">\r\n      <button @click=\"onClickToggle()\" style=\"position: absolute; right: 0; top: 0; padding: 10px; font-size: 1rem\">menu</button>\r\n      <div v-show=\"activePubComponent === 'token'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Design Tokens</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <!-- Black and White Colors -->\r\n          <h3>Color System</h3>\r\n          <h4>Black &amp; White</h4>\r\n          <div class=\"color-group\">\r\n            <div class=\"color-chip\" style=\"background-color: #000000\">black<br />#000000</div>\r\n            <div class=\"color-chip\" style=\"background-color: #ffffff; color: #000000; border: 1px solid #edf1f1\">white<br />#FFFFFF</div>\r\n          </div>\r\n\r\n          <!-- Grayscale Colors -->\r\n          <h4>Grayscale</h4>\r\n          <div class=\"color-group\">\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-gray-900)\">gray-900<br />var(--color-gray-900)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-gray-800)\">gray-800<br />var(--color-gray-800)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-gray-700)\">gray-700<br />var(--color-gray-700)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-gray-600)\">gray-600<br />var(--color-gray-600)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-gray-500)\">gray-500<br />var(--color-gray-500)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-gray-400)\">gray-400<br />var(--color-gray-400)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-gray-300)\">gray-300<br />var(--color-gray-300)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-gray-200); color: #555\">gray-200<br />var(--color-gray-200)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-gray-100); color: #555\">gray-100<br />var(--color-gray-100)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-gray-50); color: #555\">gray-50<br />var(--color-gray-50)</div>\r\n          </div>\r\n\r\n          <!-- Blue Colors -->\r\n          <h4>Blue</h4>\r\n          <div class=\"color-group\">\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-blue-900)\">blue-900<br />var(--color-blue-900)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-blue-800)\">blue-800<br />var(--color-blue-800)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-blue-700)\">blue-700<br />var(--color-blue-700)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-blue-600)\">blue-600<br />var(--color-blue-600)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-blue-500)\">blue-500<br />var(--color-blue-500)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-blue-400)\">blue-400<br />var(--color-blue-400)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-blue-300)\">blue-300<br />var(--color-blue-300)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-blue-200); color: #555\">blue-200<br />var(--color-blue-200)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-blue-100); color: #555\">blue-100<br />var(--color-blue-100)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-blue-50); color: #555\">blue-50<br />var(--color-blue-50)</div>\r\n          </div>\r\n\r\n          <!-- Green Colors -->\r\n          <h4>Green</h4>\r\n          <div class=\"color-group\">\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-green-900)\">green-900<br />var(--color-green-900)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-green-800)\">green-800<br />var(--color-green-800)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-green-700)\">green-700<br />var(--color-green-700)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-green-600)\">green-600<br />var(--color-green-600)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-green-500)\">green-500<br />var(--color-green-500)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-green-400)\">green-400<br />var(--color-green-400)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-green-300)\">green-300<br />var(--color-green-300)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-green-200); color: #555\">green-200<br />var(--color-green-200)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-green-100); color: #555\">green-100<br />var(--color-green-100)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-green-50); color: #555\">green-50<br />var(--color-green-50)</div>\r\n          </div>\r\n\r\n          <!-- Orange Colors -->\r\n          <h4>Orange</h4>\r\n          <div class=\"color-group\">\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-orange-900)\">orange-900<br />var(--color-orange-900)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-orange-800)\">orange-800<br />var(--color-orange-800)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-orange-700)\">orange-700<br />var(--color-orange-700)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-orange-600)\">orange-600<br />var(--color-orange-600)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-orange-500)\">orange-500<br />var(--color-orange-500)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-orange-400)\">orange-400<br />var(--color-orange-400)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-orange-300)\">orange-300<br />var(--color-orange-300)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-orange-200)\">orange-200<br />var(--color-orange-200)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-orange-100); color: #555\">orange-100<br />var(--color-orange-100)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-orange-50); color: #555\">orange-50<br />var(--color-orange-50)</div>\r\n          </div>\r\n\r\n          <!-- Background Colors -->\r\n          <h4>Background Colors</h4>\r\n          <div class=\"color-group\">\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-bg-white); color: #333; border: 1px solid #edf1f1\">bg-white<br />var(--color-bg-white)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-bg-light-blue); color: #333\">bg-light-blue<br />var(--color-bg-light-blue)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-bg-gray); color: #333\">bg-gray<br />var(--color-bg-gray)</div>\r\n          </div>\r\n\r\n          <!-- Status Colors -->\r\n          <h4>Status Colors</h4>\r\n          <div class=\"color-group\">\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-status-red)\">red<br />var(--color-status-red)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-status-orange)\">orange<br />var(--color-status-orange)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-status-green)\">green<br />var(--color-status-green)</div>\r\n            <div class=\"color-chip\" style=\"background-color: var(--color-status-blue)\">blue<br />var(--color-status-blue)</div>\r\n          </div>\r\n\r\n          <!-- Border Radius -->\r\n          <h3>Border Radius</h3>\r\n          <div class=\"radius-group\">\r\n            <div class=\"radius-chip radius-1\" style=\"border-radius: var(--radius-1)\">\r\n              <span>radius-1</span>\r\n              <span>0.25rem (4px)</span>\r\n            </div>\r\n            <div class=\"radius-chip radius-2\" style=\"border-radius: var(--radius-2)\">\r\n              <span>radius-2</span>\r\n              <span>0.5rem (8px)</span>\r\n            </div>\r\n            <div class=\"radius-chip radius-3\" style=\"border-radius: var(--radius-3)\">\r\n              <span>radius-3</span>\r\n              <span>0.75rem (12px)</span>\r\n            </div>\r\n            <div class=\"radius-chip radius-4\" style=\"border-radius: var(--radius-4)\">\r\n              <span>radius-4</span>\r\n              <span>1rem (16px)</span>\r\n            </div>\r\n            <div class=\"radius-chip radius-circle\" style=\"border-radius: var(--radius-circle)\">\r\n              <span>radius-circle</span>\r\n              <span>100%</span>\r\n            </div>\r\n            <div class=\"radius-chip radius-pill\" style=\"border-radius: var(--radius-pill)\">\r\n              <span>radius-pill</span>\r\n              <span>999px</span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Typography -->\r\n          <h3>Typography</h3>\r\n          <h4>Title</h4>\r\n          <div class=\"typography-group\">\r\n            <!-- Heading Section -->\r\n            <div class=\"font-item heading-04\">\r\n              <span>Heading-04</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item heading-03\">\r\n              <span>Heading-03</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item heading-02\">\r\n              <span>Heading-02</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item heading-01\">\r\n              <span>Heading-01</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n\r\n            <!-- Title Section -->\r\n            <div class=\"font-item title-01-b\">\r\n              <span>Title-01-B</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item title-01-m\">\r\n              <span>Title-01-M</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n\r\n            <!-- Body Section -->\r\n            <h4>Body</h4>\r\n            <div class=\"font-item body-02-b\">\r\n              <span>Body-02-B</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item body-02-m\">\r\n              <span>Body-02-M</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item body-01-b\">\r\n              <span>Body-01-B</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item body-01-m\">\r\n              <span>Body-01-M</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n\r\n            <!-- Label Section -->\r\n            <h4>Label</h4>\r\n            <div class=\"font-item label-01-b\">\r\n              <span>Label-01-B</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item label-01-m\">\r\n              <span>Label-01-M</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n\r\n            <!-- Caption Section -->\r\n            <h4>Caption</h4>\r\n            <div class=\"font-item caption-02-b\">\r\n              <span>Caption-02-B</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item caption-02-m\">\r\n              <span>Caption-02-M</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item caption-01-b\">\r\n              <span>Caption-01-B</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n            <div class=\"font-item caption-01-m\">\r\n              <span>Caption-01-M</span>\r\n              <p>다람쥐 헌 쳇바퀴에 타고파</p>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Border Radius -->\r\n          <h3>Spacing</h3>\r\n          <div class=\"spacing-table\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Token</th>\r\n                  <th>Pixels</th>\r\n                  <th>Rem</th>\r\n                  <th>Preview</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>spacing-2</td>\r\n                  <td>2px</td>\r\n                  <td>0.125rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 0.125rem\"></div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>spacing-4</td>\r\n                  <td>4px</td>\r\n                  <td>0.25rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 0.25rem\"></div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>spacing-6</td>\r\n                  <td>6px</td>\r\n                  <td>0.375rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 0.375rem\"></div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>spacing-8</td>\r\n                  <td>8px</td>\r\n                  <td>0.5rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 0.5rem\"></div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>spacing-12</td>\r\n                  <td>12px</td>\r\n                  <td>0.75rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 0.75rem\"></div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>spacing-16</td>\r\n                  <td>16px</td>\r\n                  <td>1rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 1rem\"></div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>spacing-20</td>\r\n                  <td>20px</td>\r\n                  <td>1.25rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 1.25rem\"></div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>spacing-24</td>\r\n                  <td>24px</td>\r\n                  <td>1.5rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 1.5rem\"></div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>spacing-32</td>\r\n                  <td>32px</td>\r\n                  <td>2rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 2rem\"></div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>spacing-40</td>\r\n                  <td>40px</td>\r\n                  <td>2.5rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 2.5rem\"></div></td>\r\n                </tr>\r\n                <tr>\r\n                  <td>spacing-48</td>\r\n                  <td>48px</td>\r\n                  <td>3rem</td>\r\n                  <td><div class=\"spacing-preview\" style=\"width: 3rem\"></div></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'icon'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Icons</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Base</h3>\r\n          <h4>Default</h4>\r\n          <p class=\"docs-desc\">아이콘의 기본 형태</p>\r\n          <div class=\"component-preview\">\r\n            <span class=\"icon-container\" title=\"Link icon\">\r\n              <svg class=\"icon icon-default\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n              </svg>\r\n            </span>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;svg class=\"icon\"&gt;\r\n  &lt;use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n&lt;/svg&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Current</h4>\r\n          <p class=\"docs-desc\">symbol의 fill과 stroke를 currentColor로 지정하여 부모의 색상을 상속받는다.</p>\r\n          <div class=\"component-preview\">\r\n            <span style=\"color: purple\">\r\n              <span class=\"icon-container current-color\" title=\"Link icon\">\r\n                <svg class=\"icon\">\r\n                  <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                </svg>\r\n              </span>\r\n            </span>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;span style=\"color: purple;\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/span&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Sizing</h3>\r\n          <ul class=\"docs-list\">\r\n            <li>icon x-sm: 16px</li>\r\n            <li>icon sm: 20px</li>\r\n            <li>default: 24px</li>\r\n            <li>icon lg: 32px</li>\r\n            <li>icon x-lg: 40px</li>\r\n          </ul>\r\n          <div class=\"component-preview\" style=\"display: flex; align-items: center\">\r\n            <svg class=\"icon x-sm\">\r\n              <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n            </svg>\r\n            <svg class=\"icon sm\">\r\n              <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n            </svg>\r\n            <svg class=\"icon\">\r\n              <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n            </svg>\r\n            <svg class=\"icon lg\">\r\n              <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n            </svg>\r\n            <svg class=\"icon x-lg\">\r\n              <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n            </svg>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;svg class=\"icon x-sm\"&gt;\r\n  &lt;use xlink:href=\"#link\"&gt;&lt;/use&gt;\r\n&lt;/svg&gt;\r\n&lt;svg class=\"icon sm\"&gt;\r\n  &lt;use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n&lt;/svg&gt;\r\n&lt;svg class=\"icon\"&gt;\r\n  &lt;use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n&lt;/svg&gt;\r\n&lt;svg class=\"icon lg\"&gt;\r\n  &lt;use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n&lt;/svg&gt;\r\n&lt;svg class=\"icon x-lg\"&gt;\r\n  &lt;use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n&lt;/svg&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Icons</h3>\r\n          <ol class=\"docs-list\" style=\"list-style-type: decimal; margin-left: 18px; color: #5a76aa\">\r\n            <li>아이콘을 symbols.svg 파일에 &lt;symbol&gt; 태그로 추가.</li>\r\n            <li>&lt;use&gt; 태그로 `xlink:href` 경로와 id를 참조하여 아이콘 삽입.</li>\r\n            <!-- <li>fill과 stroke를 `currentColor`로 변경해 부모 요소의 텍스트 색상과 연동.</li>\r\n            <li>hover, focus, active 상태별로 CSS에서 색상 변경 가능.</li> -->\r\n            <!-- <li>필요 시 `aria-hidden` 등 접근성 속성 추가.</li> -->\r\n          </ol>\r\n          <div class=\"component-preview\">\r\n            <ul class=\"docs-icon\">\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Sample icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>sample</figcaption>\r\n                </figure>\r\n              </li>\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Visitor icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#visitor\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>visitor</figcaption>\r\n                </figure>\r\n              </li>\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Close icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#close_16\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>close_16</figcaption>\r\n                </figure>\r\n              </li>\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Bluetooth icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#bluetooth\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>bluetooth</figcaption>\r\n                </figure>\r\n              </li>\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Gift icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#gift\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>gift</figcaption>\r\n                </figure>\r\n              </li>\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Sale icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#sale\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>sale</figcaption>\r\n                </figure>\r\n              </li>\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Barcode icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#barcode\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>barcode</figcaption>\r\n                </figure>\r\n              </li>\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Coupon icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#coupon\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>coupon</figcaption>\r\n                </figure>\r\n              </li>\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Location icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#location\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>location</figcaption>\r\n                </figure>\r\n              </li>\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Refresh icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#refresh\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>refresh</figcaption>\r\n                </figure>\r\n              </li>\r\n              <li class=\"docs-icon-list\">\r\n                <figure>\r\n                  <span class=\"icon-container icon-link\" title=\"Arrow Right icon\">\r\n                    <svg class=\"icon icon-default\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#arrow_right\"></use>\r\n                    </svg>\r\n                  </span>\r\n                  <figcaption>arrow_right</figcaption>\r\n                </figure>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'button'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Buttons</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Buttons</h3>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 10px\">\r\n            <button class=\"btn\">Button</button>\r\n            <button class=\"btn primary\">Primary Button</button>\r\n            <button class=\"btn secondary\">Secondary Button</button>\r\n            <button class=\"btn with-icon\">\r\n              <svg class=\"icon icon-left\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#marker\"></use>\r\n              </svg>\r\n              Button With Icon\r\n            </button>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn primary\"&gt;Primary Button&lt;/button&gt;\r\n&lt;button class=\"btn secondary\"&gt;Secondary Button&lt;/button&gt;\r\n&lt;button class=\"btn with-icon\"&gt;\r\n  &lt;svg class=\"icon icon-left\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#marker\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n  Button With Icon\r\n&lt;/button&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Links</h3>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 10px\">\r\n            <router-link to=\"#\" class=\"btn\">Button</router-link>\r\n            <router-link to=\"#\" class=\"btn primary\">Primary Button</router-link>\r\n            <router-link to=\"#\" class=\"btn secondary\">Secondary Button</router-link>\r\n            <router-link to=\"#\" class=\"btn with-icon\">\r\n              <svg class=\"icon icon-left\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#marker\"></use>\r\n              </svg>\r\n              Button With Icon\r\n            </router-link>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\">\r\n              <button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button>\r\n            </div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;router-link to=\"#\" class=\"btn\"&gt;Button&lt;/router-link&gt;\r\n&lt;router-link to=\"#\" class=\"btn primary\"&gt;Primary Button&lt;/router-link&gt;\r\n&lt;router-link to=\"#\" class=\"btn secondary\"&gt;Secondary Button&lt;/router-link&gt;\r\n&lt;router-link to=\"#\" class=\"btn with-icon\"&gt;\r\n  &lt;svg class=\"icon icon-left\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#marker\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n  Button With Icon\r\n&lt;/router-link&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Sizing</h3>\r\n          <h4>Default</h4>\r\n          <p class=\"docs-desc\">기본 버튼은 <code class=\"doc\">.btn</code> 클래스를 사용하여 생성된다. 기본 높이는 56px</p>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 10px\">\r\n            <button class=\"btn\">Button</button>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn\"&gt;Button&lt;/button&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Stretch</h4>\r\n          <p class=\"docs-desc\">Stretch로 변경하기 위해 <code class=\"doc\">.stretch</code> 를 추가한다.</p>\r\n          <div class=\"component-preview\"><button class=\"btn primary stretch\">Button</button></div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn primary stretch\"&gt;Button&lt;/button&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Variations</h3>\r\n          <h4>Primary</h4>\r\n          <p class=\"docs-desc\">색상을 Primary로 변경하기 위해 <code class=\"doc\">.primary</code> 를 추가한다.</p>\r\n          <div class=\"component-preview\"><button class=\"btn primary\">Primary Button</button></div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn primary\"&gt;Primary Button&lt;/button&gt;\r\n            </code></pre>\r\n          </div>\r\n          <h4>Secondary</h4>\r\n          <p class=\"docs-desc\">색상을 Secondary로 변경하기 위해 <code class=\"doc\">.secondary</code> 를 추가한다.</p>\r\n          <div class=\"component-preview\"><button class=\"btn secondary\">Secondary Button</button></div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn secondary\"&gt;Secondary Button&lt;/button&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Button with Icon</h4>\r\n          <p class=\"docs-desc\">아이콘이 포함된 버튼을 만들기 위해 <code class=\"doc\">.with-icon</code> 클래스를 추가한다.</p>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 10px\">\r\n            <button class=\"btn with-icon\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#marker\"></use>\r\n              </svg>\r\n              Button With Icon\r\n            </button>\r\n            <button class=\"btn with-icon\">\r\n              Button With Icon\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#marker\"></use>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn with-icon\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#marker\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n  Button With Icon\r\n&lt;/button&gt;\r\n&lt;button class=\"btn with-icon\"&gt;\r\n  Button With Icon\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#marker\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Text Button</h4>\r\n          <p class=\"docs-desc\">텍스트 버튼을 만들기 위해 <code class=\"doc\">.text</code> 클래스를 추가한다.</p>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 10px\">\r\n            <button class=\"btn text\">Text Button</button>\r\n            <button class=\"btn text\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#refresh\"></use>\r\n              </svg>\r\n              Text Button With Icon\r\n            </button>\r\n            <button class=\"btn text\">\r\n              Text Button With Icon\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#refresh\"></use>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn text\"&gt;Text Button&lt;/button&gt;\r\n&lt;button class=\"btn text\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#refresh\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n  Text Button With Icon\r\n&lt;/button&gt;\r\n&lt;button class=\"btn text\"&gt;\r\n  Text Button With Icon\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#refresh\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Disabled</h3>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 10px\">\r\n            <button class=\"btn\" disabled>Button</button>\r\n            <button class=\"btn primary\" disabled>Primary Button</button>\r\n            <button class=\"btn secondary\" disabled>Secondary Button</button>\r\n            <button class=\"btn with-icon\" disabled>\r\n              <svg class=\"icon icon-left\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#marker\"></use>\r\n              </svg>\r\n              Button With Icon\r\n            </button>\r\n            <button class=\"btn text\" disabled>Text Button</button>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn\" disabled&gt;Button&lt;/button&gt;\r\n&lt;button class=\"btn primary\" disabled&gt;Primary Button&lt;/button&gt;\r\n&lt;button class=\"btn secondary\" disabled&gt;Secondary Button&lt;/button&gt;\r\n&lt;button class=\"btn with-icon\" disabled&gt;\r\n  &lt;svg class=\"icon icon-left\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#marker\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n  Button With Icon\r\n&lt;/button&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Button Group</h3>\r\n          <p class=\"docs-desc\">버튼 그룹을 만들기 위해 <code class=\"doc\">.btn-area</code> 클래스를 사용합니다.</p>\r\n          <div class=\"component-preview\">\r\n            <div class=\"btn-area\">\r\n              <button class=\"btn primary\">Primary Button</button>\r\n              <button class=\"btn secondary\">Secondary Button</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=\"btn-area\"&gt;\r\n  &lt;button class=\"btn\"&gt;Button&lt;/button&gt;\r\n  &lt;button class=\"btn primary\"&gt;Primary Button&lt;/button&gt;\r\n  &lt;button class=\"btn secondary\"&gt;Secondary Button&lt;/button&gt;\r\n  &lt;button class=\"btn with-icon\"&gt;\r\n  &lt;svg class=\"icon icon-left\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#marker\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n  Button With Icon\r\n  &lt;/button&gt;\r\n&lt;/div&gt;\r\n          </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'buttonicons'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Button Icons</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Button Icon</h3>\r\n          <p class=\"docs-desc\">아이콘 버튼을 만들기 위해 <code class=\"doc\">.btn-icon</code> 클래스를 추가한다.</p>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 10px\">\r\n            <button class=\"btn-icon\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn-icon\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Icon Button Sizes</h3>\r\n          <ul class=\"docs-list\">\r\n            <li>x-sm: 16px</li>\r\n            <li>sm: 20px</li>\r\n            <li>default: 24px</li>\r\n            <li>lg: 32px</li>\r\n            <li>x-lg: 40px</li>\r\n          </ul>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 6px; align-items: center\">\r\n            <button class=\"btn-icon x-sm\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n              </svg>\r\n            </button>\r\n            <button class=\"btn-icon sm\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n              </svg>\r\n            </button>\r\n            <button class=\"btn-icon\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n              </svg>\r\n            </button>\r\n            <button class=\"btn-icon lg\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n              </svg>\r\n            </button>\r\n            <button class=\"btn-icon x-lg\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn-icon x-sm\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n&lt;button class=\"btn-icon sm\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n&lt;button class=\"btn-icon\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n&lt;button class=\"btn-icon lg\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n&lt;button class=\"btn-icon x-lg\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n    &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Variations</h3>\r\n          <h4>Color</h4>\r\n          <ul class=\"docs-list\">\r\n            <li>primary</li>\r\n            <li>orange</li>\r\n            <li>gray</li>\r\n          </ul>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 10px\">\r\n            <button class=\"btn-icon primary\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n              </svg>\r\n            </button>\r\n            <button class=\"btn-icon orange\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n              </svg>\r\n            </button>\r\n            <button class=\"btn-icon gray\">\r\n              <svg class=\"icon\">\r\n                <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;button class=\"btn-icon primary\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n  &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n&lt;button class=\"btn-icon orange\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n  &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n&lt;button class=\"btn-icon gray\"&gt;\r\n  &lt;svg class=\"icon\"&gt;\r\n  &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n  &lt;/svg&gt;\r\n&lt;/button&gt;\r\n          </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'form'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Form controls</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Input</h3>\r\n          <div class=\"component-preview\" style=\"background-color: #f5f5f5\">\r\n            <div class=\"form-element\">\r\n              <label class=\"form-element__label\" for=\"text-input-id-0\">Input Label</label>\r\n              <div class=\"form-element__control\">\r\n                <input type=\"text\" class=\"input\" id=\"text-input-id-0\" placeholder=\"Placeholder text…\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=\"form-element\"&gt;\r\n    &lt;label class=\"form-element__label\" for=\"text-input-id-0\"&gt;Input Label&lt;/label&gt;\r\n    &lt;div class=\"form-element__control\"&gt;\r\n        &lt;input type=\"text\" class=\"input\" id=\"text-input-id-0\" placeholder=\"Placeholder text…\"&gt;\r\n    &lt;/div&gt;\r\n&lt;/div&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Variations</h3>\r\n          <h4>Default</h4>\r\n          <p class=\"docs-desc\"></p>\r\n          <div class=\"component-preview\" style=\"background-color: #f5f5f5\">\r\n            <div class=\"form-element\">\r\n              <label class=\"form-element__label\" for=\"text-input-id-0\">Input Label</label>\r\n              <div class=\"form-element__control\"><input id=\"text-input-id-0\" placeholder=\"Placeholder text…\" class=\"input\" /></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=&quot;form-element&quot;&gt;\r\n  &lt;label class=&quot;form-element__label&quot; for=&quot;text-input-id-0&quot;&gt;Input Label&lt;/label&gt;\r\n  &lt;div class=&quot;form-element__control&quot;&gt;\r\n    &lt;input id=&quot;text-input-id-0&quot; placeholder=&quot;Placeholder text…&quot; type=&quot;text&quot; class=&quot;input&quot;&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;              \r\n              </code></pre>\r\n          </div>\r\n\r\n          <h4>Readonly</h4>\r\n          <div class=\"component-preview\">\r\n            <div class=\"form-element\">\r\n              <label class=\"form-element__label\" for=\"text-input-id-0\">Input Label</label>\r\n              <div class=\"form-element__control\">\r\n                <input type=\"text\" readonly class=\"input input-outline\" id=\"text-input-id-0\" value=\"Value\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=\"form-element\"&gt;\r\n  &lt;label class=\"form-element__label\" for=\"text-input-id-0\"&gt;Input Label&lt;/label&gt;\r\n  &lt;div class=\"form-element__control\"&gt;\r\n    &lt;input type=\"text\" readonly class=\"input input-outline\" id=\"text-input-id-0\" value=\"Value\"&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n              </code></pre>\r\n          </div>\r\n\r\n          <h4>Required</h4>\r\n          <p class=\"docs-desc\">label에 <code class=\"doc\">abbr</code> 로 required 표시 추가</p>\r\n          <div class=\"component-preview\">\r\n            <div class=\"form-element\">\r\n              <label class=\"form-element__label\" for=\"text-input-id-0\">Input Label<abbr class=\"required\" title=\"필수 항목\">* </abbr></label>\r\n              <div class=\"form-element__control\">\r\n                <input type=\"text\" required class=\"input input-outline\" id=\"text-input-id-0\" aria-required=\"true\" placeholder=\"Placeholder text…\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=\"form-element\"&gt;\r\n  &lt;label class=\"form-element__label\" for=\"text-input-id-0\"&gt;Input Label&lt;abbr class=\"required\" title=\"필수 항목\"&gt;* &lt;/abbr&gt;&lt;/label&gt;\r\n  &lt;div class=\"form-element__control\"&gt;\r\n    &lt;input type=\"text\" required class=\"input input-outline\" id=\"text-input-id-0\" aria-required=\"true\" placeholder=\"Placeholder text…\"&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n              </code></pre>\r\n          </div>\r\n\r\n          <h4>Disabled(사용 안함)</h4>\r\n          <p class=\"docs-desc\">필요시 추후 수정하기..</p>\r\n          <div class=\"component-preview\">\r\n            <div class=\"form-element\">\r\n              <label class=\"form-element__label\" for=\"text-input-id-0\">Input Label</label>\r\n              <div class=\"form-element__control\">\r\n                <input id=\"text-input-id-0\" placeholder=\"Placeholder text…\" disabled class=\"input input-outline\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=&quot;form-element&quot;&gt;\r\n  &lt;label class=&quot;form-element__label&quot; for=&quot;text-input-id-0&quot;&gt;Input Label&lt;/label&gt;\r\n  &lt;div class=&quot;form-element__control&quot;&gt;\r\n    &lt;input id=&quot;text-input-id-0&quot; placeholder=&quot;Placeholder text…&quot; disabled type=&quot;text&quot; class=&quot;input input-outline&quot; value=&quot;&quot;&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;                        \r\n              </code></pre>\r\n          </div>\r\n\r\n          <h3>Validation</h3>\r\n          <h4>Error</h4>\r\n          <p class=\"docs-desc\">컨테이너에 <code class=\"doc\">.is-error</code> 추가</p>\r\n          <div class=\"component-preview\" style=\"display: flex; flex-direction: column; gap: 40px\">\r\n            <div class=\"form-element is-error\">\r\n              <label class=\"form-element__label\" for=\"text-input-id-0\">Input Label</label>\r\n              <div class=\"form-element__control\">\r\n                <input type=\"text\" required class=\"input\" id=\"text-input-id-0\" placeholder=\"Placeholder text…\" aria-describedby=\"error-message-id-0\" aria-invalid=\"true\" />\r\n              </div>\r\n              <p class=\"form-feedback\" id=\"error-message-id-0\">Enter a value.</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=\"form-element is-error\"&gt;\r\n  &lt;label class=\"form-element__label\" for=\"text-input-id-0\"&gt;Input Label&lt;/label&gt;\r\n  &lt;div class=\"form-element__control\"&gt;\r\n    &lt;input id=\"text-input-id-0\" placeholder=\"Placeholder text…\" required aria-describedby=\"error-message-id-0\" class=\"input\" aria-invalid=\"true\"&gt;\r\n  &lt;/div&gt;\r\n  &lt;p class=\"form-feedback\" id=\"error-message-id-0\"&gt;Enter a value.&lt;/p&gt;\r\n&lt;/div&gt; \r\n              </code></pre>\r\n          </div>\r\n\r\n          <h3>Search</h3>\r\n          <h4>Base</h4>\r\n          <div class=\"component-preview\">\r\n            <div class=\"form-element\">\r\n              <label class=\"form-element__label\" for=\"search\">Input Label</label>\r\n              <div class=\"form-element__control input-has-icon\">\r\n                <input \r\n                    type=\"text\" \r\n                    id=\"search\" \r\n                    class=\"input input-search\" \r\n                    placeholder=\"Placeholder text…\"\r\n                    autocomplete=\"off\"\r\n                  >\r\n                <button class=\"btn-icon\" aria-label=\"검색\">\r\n                  <svg class=\"icon\" aria-hidden=\"true\">\r\n                    <use xlink:href=\"@/assets/images/icons/symbols.svg#search\"></use>\r\n                  </svg>\r\n                </button>\r\n                <button \r\n                  type=\"button\" \r\n                  class=\"btn-icon clear\" \r\n                  aria-label=\"삭제\">\r\n                  <svg class=\"icon\" aria-hidden=\"true\">\r\n                    <use xlink:href=\"@/assets/images/icons/symbols.svg#delete\"></use>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=&quot;form-element&quot;&gt;\r\n  &lt;label class=&quot;form-element__label&quot; for=&quot;search&quot;&gt;Input Label&lt;/label&gt;\r\n  &lt;div class=&quot;form-element__control input-has-icon&quot;&gt;\r\n    &lt;input \r\n      type=&quot;text&quot; \r\n      id=&quot;search&quot; \r\n      class=&quot;input input-search&quot; \r\n      placeholder=&quot;Placeholder text…&quot;\r\n      autocomplete=&quot;off&quot;\r\n      v-model=&quot;searchText&quot;\r\n    &gt;\r\n    &lt;button class=&quot;btn-icon&quot; aria-label=&quot;검색&quot;&gt;\r\n      &lt;svg class=&quot;icon&quot; aria-hidden=&quot;true&quot;&gt;\r\n        &lt;use xlink:href=&quot;@/assets/images/icons/symbols.svg#search&quot;&gt;&lt;/use&gt;\r\n      &lt;/svg&gt;\r\n    &lt;/button&gt;\r\n    &lt;button \r\n      type=&quot;button&quot; \r\n      class=&quot;btn-icon clear&quot; \r\n      @click=&quot;clearSearch&quot; \r\n      v-show=&quot;searchText&quot;\r\n      aria-label=&quot;삭제&quot;&gt;\r\n      &lt;svg class=&quot;icon&quot; aria-hidden=&quot;true&quot;&gt;\r\n        &lt;use xlink:href=&quot;@/assets/images/icons/symbols.svg#delete&quot;&gt;&lt;/use&gt;\r\n      &lt;/svg&gt;\r\n    &lt;/button&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n              </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'select'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Select</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Select</h3>\r\n          <h4>Default</h4>\r\n          <div class=\"component-preview\" style=\"background-color: #f5f5f5\">\r\n            <div class=\"form-element\">\r\n              <label class=\"form-element__label\" for=\"select-01\">Select Label</label>\r\n              <div class=\"select_container\">\r\n                <select class=\"select\" id=\"select-01\">\r\n                  <option value=\"\">Select…</option>\r\n                  <option value=\"option1\">Option One</option>\r\n                  <option value=\"option2\">Option Two</option>\r\n                  <option value=\"option3\">Option</option>\r\n                </select>\r\n                <svg class=\"icon\">\r\n                  <use xlink:href=\"@/assets/images/icons/symbols.svg#arrow_down\"></use>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=&quot;form-element&quot;&gt;\r\n  &lt;label class=&quot;form-element__label&quot; for=&quot;text-input-id-0&quot;&gt;Input Label&lt;/label&gt;\r\n  &lt;div class=&quot;form-element__control&quot;&gt;\r\n    &lt;input id=&quot;text-input-id-0&quot; placeholder=&quot;Placeholder text…&quot; type=&quot;text&quot; class=&quot;input&quot; value=&quot;&quot;&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;              \r\n              </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'checkbox'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Checkbox</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Base</h3>\r\n          <div class=\"component-preview\">\r\n            <div class=\"form-element\">\r\n              <div class=\"form-element__control\">\r\n                <div class=\"checkbox\">\r\n                  <input type=\"checkbox\" name=\"options\" id=\"checkbox-unique-id-3\" value=\"checkbox-unique-id-3\" checked />\r\n                  <label class=\"checkbox__label\" for=\"checkbox-unique-id-3\">\r\n                    <span class=\"checkbox_faux\">\r\n                      <svg class=\"icon\">\r\n                        <use xlink:href=\"@/assets/images/icons/symbols.svg#check\"></use>\r\n                      </svg>\r\n                    </span>\r\n                    <span class=\"form-element__label\">Checkbox Label</span></label\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=\"form-element\"&gt;\r\n  &lt;div class=\"form-element__control\"&gt;\r\n    &lt;div class=\"checkbox\"&gt;\r\n      &lt;input type=\"checkbox\" name=\"options\" id=\"checkbox-unique-id-3\" value=\"checkbox-unique-id-3\" checked&gt;\r\n      &lt;label class=\"checkbox__label\" for=\"checkbox-unique-id-3\"&gt;\r\n        &lt;span class=\"checkbox_faux\"&gt;\r\n          &lt;svg class=\"icon\"&gt;\r\n            &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n          &lt;/svg&gt;\r\n        &lt;/span&gt; \r\n        &lt;span class=\"form-element__label\"&gt;Checkbox Label&lt;/span&gt;\r\n      &lt;/label&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;          \r\n              </code></pre>\r\n          </div>\r\n\r\n          <h3>Switch</h3>\r\n          <p class=\"docs-desc\">.checkbox에 label <code class=\"doc\">.switch</code> 를 추가</p>\r\n          <div class=\"component-preview\">\r\n            <div class=\"form-element\">\r\n              <div class=\"form-element__control\">\r\n                <div class=\"checkbox left_label\">\r\n                  <span class=\"form-element__label\">{{ isAllowed ? \"Enabled\" : \"Disabled\" }}</span>\r\n                  <label class=\"switch\" for=\"permissionSwitch\">\r\n                    <input type=\"checkbox\" id=\"permissionSwitch\" v-model=\"isAllowed\" />\r\n                    <span class=\"slider\"></span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=&quot;form-element&quot;&gt;\r\n  &lt;div class=&quot;form-element__control&quot;&gt;\r\n    &lt;div class=&quot;checkbox left_label&quot;&gt;\r\n      <span class=\"form-element__label\">{{ isAllowed ? 'Enabled' : 'Disabled' }}</span>\r\n      &lt;label class=&quot;switch&quot; for=&quot;permissionSwitch&quot;&gt;\r\n        &lt;input\r\n          type=&quot;checkbox&quot;\r\n          id=&quot;permissionSwitch&quot;\r\n          v-model=&quot;isAllowed&quot;\r\n        &gt;\r\n        &lt;span class=&quot;slider&quot;&gt;&lt;/span&gt;\r\n      &lt;/label&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n              </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'badge'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Badges</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Default</h3>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 8px\">\r\n            <span class=\"badge\">공유중</span>\r\n            <span class=\"badge focus\">관심</span>\r\n            <span class=\"badge restrict\">채팅제한</span>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;span class=&quot;badge&quot;&gt;공유중&lt;/span&gt;\r\n&lt;span class=&quot;badge focus&quot;&gt;관심&lt;/span&gt;\r\n&lt;span class=&quot;badge restrict&quot;&gt;채팅제한&lt;/span&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Status</h3>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 8px\">\r\n            <span class=\"badge status\">수업중</span>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;span class=&quot;badge status&quot;&gt;수업중&lt;/span&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Count</h3>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 8px\">\r\n            <span class=\"badge count\" aria-live=\"polite\" aria-label=\"24개의 새로운 메시지\">24</span>\r\n            <span class=\"badge count\" aria-live=\"polite\" aria-label=\"300개 이상의 새로운 메시지\">300+</span>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;span class=\"badge count\" aria-live=\"polite\" aria-label=\"24개의 새로운 메시지\"&gt;24&lt;/span&gt;\r\n&lt;span class=\"badge count\" aria-live=\"polite\" aria-label=\"300개 이상의 새로운 메시지\"&gt;300+&lt;/span&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Unread</h3>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 8px\">\r\n            <span class=\"badge unread\" aria-live=\"polite\" aria-label=\"읽지 않은 메시지\"></span>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;span class=\"badge unread\" aria-live=\"polite\" aria-label=\"읽지 않은 메시지\"&gt;&lt;/span&gt;\r\n            </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'header'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Header</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Main</h3>\r\n          <div class=\"component-preview\" style=\"background-color: #f4f6f9\">\r\n            <header class=\"header\">\r\n              <div class=\"header-inner\" role=\"banner\">\r\n                <h1 class=\"logo\">\r\n                  <img src=\"@/assets/images/logo/logo.png\" alt=\"행복을 파는 용인중앙시장\" aria-label=\"용인중앙시장 - 메인으로 이동\" width=\"125\" height=\"56\" />\r\n                </h1>\r\n                <div class=\"visitor-info\" role=\"status\" aria-live=\"polite\">\r\n                  <svg class=\"icon\" role=\"img\" aria-label=\"방문자 아이콘\">\r\n                    <use xlink:href=\"@/assets/images/icons/symbols.svg#visitor\"></use>\r\n                  </svg>\r\n                  <span class=\"visitor-count\">1234</span>\r\n                </div>\r\n              </div>\r\n            </header>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;header class=&quot;header&quot;&gt;\r\n  &lt;div class=&quot;header-inner&quot; role=&quot;banner&quot;&gt;\r\n    &lt;h1 class=&quot;logo&quot;&gt;\r\n      &lt;img src=&quot;@/assets/images/logo/logo.png&quot; alt=&quot;행복을 파는 용인중앙시장&quot; aria-label=&quot;용인중앙시장 - 메인으로 이동&quot; width=&quot;125&quot; height=&quot;56&quot; /&gt;\r\n    &lt;/h1&gt;\r\n    &lt;div class=&quot;visitor-info&quot; role=&quot;status&quot; aria-live=&quot;polite&quot;&gt;\r\n      &lt;svg class=&quot;icon&quot; role=&quot;img&quot; aria-label=&quot;방문자 아이콘&quot;&gt;\r\n        &lt;use xlink:href=&quot;@/assets/images/icons/symbols.svg#visitor&quot;&gt;&lt;/use&gt;\r\n      &lt;/svg&gt;\r\n      &lt;span class=&quot;visitor-count&quot;&gt;1234&lt;/span&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n&lt;/header&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Sub</h3>\r\n          <h4>Default</h4>\r\n          <div class=\"component-preview\" style=\"background-color: #f4f6f9\">\r\n            <header class=\"sub-header\">\r\n              <div class=\"sub-header-inner\">\r\n                <button class=\"btn-icon btn-back\" aria-label=\"이전 페이지로 돌아가기\">\r\n                  <svg class=\"icon\">\r\n                    <use xlink:href=\"@/assets/images/icons/symbols.svg#back\"></use>\r\n                  </svg>\r\n                </button>\r\n                <h1 class=\"title\">타이틀</h1>\r\n                <div class=\"right-area\">\r\n                </div>\r\n              </div>\r\n            </header>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;header class=&quot;sub-header&quot;&gt;\r\n  &lt;div class=&quot;sub-header-inner&quot;&gt;\r\n    &lt;button class=&quot;btn-icon btn-back&quot; aria-label=&quot;이전 페이지로 돌아가기&quot;&gt;\r\n      &lt;svg class=&quot;icon&quot;&gt;\r\n        &lt;use xlink:href=&quot;@/assets/images/icons/symbols.svg#back&quot;&gt;&lt;/use&gt;\r\n      &lt;/svg&gt;\r\n    &lt;/button&gt;\r\n    &lt;h1 class=&quot;title&quot;&gt;타이틀&lt;/h1&gt;\r\n    &lt;div class=&quot;right-area&quot;&gt;&lt;/div&gt;\r\n  &lt;/div&gt;\r\n&lt;/header&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Detail</h4>\r\n          <ul class=\"docs-list\">\r\n            <li><code class=\"doc\">is-detail</code> 클래스 추가</li>\r\n            <li>서브 상세페이지에서 사용</li>\r\n          </ul>\r\n          <div class=\"component-preview\" style=\"background-color: #f4f6f9\">\r\n            <header class=\"sub-header\">\r\n              <div class=\"sub-header-inner is-detail\">\r\n                <button class=\"btn-icon btn-back\" aria-label=\"이전 페이지로 돌아가기\">\r\n                  <svg class=\"icon\">\r\n                    <use xlink:href=\"@/assets/images/icons/symbols.svg#back\"></use>\r\n                  </svg>\r\n                </button>\r\n                <h1 class=\"title\">타이틀</h1>\r\n                <div class=\"right-area\">\r\n                  <button class=\"btn-icon\" aria-label=\"비콘 위치정보\">\r\n                    <svg class=\"icon\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#map\"></use>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </header>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;header class=&quot;sub-header&quot;&gt;\r\n  &lt;div class=&quot;sub-header-inner is-detail&quot;&gt;\r\n    &lt;button class=&quot;btn-icon btn-back&quot; aria-label=&quot;이전 페이지로 돌아가기&quot;&gt;\r\n      &lt;svg class=&quot;icon&quot;&gt;\r\n        &lt;use xlink:href=&quot;@/assets/images/icons/symbols.svg#back&quot;&gt;&lt;/use&gt;\r\n      &lt;/svg&gt;\r\n    &lt;/button&gt;\r\n    &lt;h1 class=&quot;title&quot;&gt;타이틀&lt;/h1&gt;\r\n    &lt;div class=&quot;right-area&quot;&gt;\r\n      &lt;button class=&quot;btn-icon&quot; aria-label=&quot;비콘 위치정보&quot;&gt;\r\n        &lt;svg class=&quot;icon&quot;&gt;\r\n          &lt;use xlink:href=&quot;@/assets/images/icons/symbols.svg#map&quot;&gt;&lt;/use&gt;\r\n        &lt;/svg&gt;\r\n      &lt;/button&gt;\r\n    &lt;/div&gt;\r\n  &lt;/div&gt;\r\n&lt;/header&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>이전 버튼만 존재할 때</h4>\r\n          <ul class=\"docs-list\">\r\n            <li><code class=\"doc\">is-only</code> 클래스 추가</li>\r\n          </ul>\r\n          <div class=\"component-preview\" style=\"background-color: #f4f6f9\">\r\n            <header class=\"sub-header\">\r\n              <div class=\"sub-header-inner is-only\">\r\n                <button class=\"btn-icon btn-back\" aria-label=\"이전 페이지로 돌아가기\">\r\n                  <svg class=\"icon\">\r\n                    <use xlink:href=\"@/assets/images/icons/symbols.svg#back\"></use>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </header>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;header class=&quot;sub-header&quot;&gt;\r\n  &lt;div class=&quot;sub-header-inner is-only&quot;&gt;\r\n    &lt;button class=&quot;btn-icon btn-back&quot; aria-label=&quot;이전 페이지로 돌아가기&quot;&gt;\r\n      &lt;svg class=&quot;icon&quot;&gt;\r\n        &lt;use xlink:href=&quot;@/assets/images/icons/symbols.svg#back&quot;&gt;&lt;/use&gt;\r\n      &lt;/svg&gt;\r\n    &lt;/button&gt;\r\n  &lt;/div&gt;\r\n&lt;/header&gt;\r\n            </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'coupon'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Coupon</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Base</h3>\r\n          <ul class=\"docs-list\">\r\n            <li>2줄 이상 ellipsis처리</li>\r\n            <li>쿠폰의 타이틀 영역에 최대 넓이 128px</li>\r\n          </ul>\r\n          <div class=\"component-preview\">\r\n            <article class=\"coupon primary\" style=\"min-width: initial; max-width: 208px\">\r\n              <div class=\"coupon-left\">\r\n                <strong class=\"coupon-title\">2줄이 넘어가는 글자수의 쿠폰 타이틀입니다. </strong>\r\n                <p class=\"coupon-period\">2024.10.18 ~ 2024.11.17</p>\r\n              </div>\r\n              <div class=\"coupon-right\">\r\n                <svg class=\"icon\">\r\n                  <use xlink:href=\"@/assets/images/icons/symbols.svg#sale\"></use>\r\n                </svg>\r\n              </div>\r\n            </article>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;article class=\"coupon primary\"&gt;\r\n  &lt;div class=\"coupon-left\"&gt;\r\n    &lt;strong class=\"coupon-title\"&gt;2줄이 넘어가는 글자수의 쿠폰 타이틀입니다. &lt;/strong&gt;\r\n    &lt;p class=\"coupon-details\"&gt;2024.10.18 ~ 2024.11.17&lt;/p&gt;\r\n  &lt;/div&gt;\r\n  &lt;div class=\"coupon-right\"&gt;\r\n    &lt;svg class=\"icon\"&gt;\r\n      &lt;use xlink:href=\"@/assets/images/icons/symbols.svg#gift\"&gt;&lt;/use&gt;\r\n    &lt;/svg&gt;\r\n  &lt;/div&gt;\r\n&lt;/article&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Variations</h3>\r\n          <h4>Color</h4>\r\n          <ul class=\"docs-list\">\r\n            <li>Primary</li>\r\n            <li>Secondary</li>\r\n          </ul>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 16px\">\r\n            <article class=\"coupon primary\" style=\"min-width: initial; max-width: 208px\">\r\n              <div class=\"coupon-left\">\r\n                <strong class=\"coupon-title\">2줄이 넘어가는 글자수의 쿠폰 타이틀입니다. </strong>\r\n                <p class=\"coupon-period\">2024.10.18 ~ 2024.11.17</p>\r\n              </div>\r\n              <div class=\"coupon-right\">\r\n                <svg class=\"icon\">\r\n                  <use xlink:href=\"@/assets/images/icons/symbols.svg#sale\"></use>\r\n                </svg>\r\n              </div>\r\n            </article>\r\n            <article class=\"coupon secondary\" style=\"min-width: initial; max-width: 208px\">\r\n              <div class=\"coupon-left\">\r\n                <strong class=\"coupon-title\">2줄이 넘어가는 글자수의 쿠폰 타이틀입니다. </strong>\r\n                <p class=\"coupon-period\">2024.10.18 ~ 2024.11.17</p>\r\n              </div>\r\n              <div class=\"coupon-right\">\r\n                <svg class=\"icon\">\r\n                  <use xlink:href=\"@/assets/images/icons/symbols.svg#gift\"></use>\r\n                </svg>\r\n              </div>\r\n            </article>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;article class=\"coupon primary\"&gt;\r\n  ...\r\n&lt;/article&gt;\r\n&lt;article class=\"coupon secondary\"&gt;\r\n  ...\r\n&lt;/article&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Sizing</h4>\r\n          <p class=\"docs-desc\">Large 사이즈로 변경하기 위해 coupon에 <code class=\"doc\">lg</code> 클래스 추가</p>\r\n          <div class=\"component-preview\" style=\"display: flex; gap: 16px\">\r\n            <article class=\"coupon primary lg\" style=\"min-width: initial; max-width: 320px\">\r\n              <div class=\"coupon-left\">\r\n                <strong class=\"coupon-title\">2줄이 넘어가는 글자수의 쿠폰 타이틀입니다. </strong>\r\n                <p class=\"coupon-details\">1인1메뉴 및 사이드 메뉴 추가 주문 시 사용가능</p>\r\n                <p class=\"coupon-period\">2024.10.18 ~ 2024.11.17</p>\r\n              </div>\r\n              <div class=\"coupon-right\">\r\n                <button class=\"coupon-action\">\r\n                  <svg class=\"icon\">\r\n                    <use xlink:href=\"@/assets/images/icons/symbols.svg#barcode\"></use>\r\n                  </svg>\r\n                  <span>사용하기</span>\r\n                </button>\r\n              </div>\r\n            </article>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;article class=&quot;coupon primary lg&quot;&gt;\r\n  &lt;div class=&quot;coupon-left&quot;&gt;\r\n    &lt;strong class=&quot;coupon-title&quot;&gt;2줄이 넘어가는 글자수의 쿠폰 타이틀입니다. &lt;/strong&gt;\r\n    &lt;p class=&quot;coupon-details&quot;&gt;1인1메뉴 및 사이드 메뉴 추가 주문 시 사용가능&lt;/p&gt;\r\n    &lt;p class=&quot;coupon-period&quot;&gt;2024.10.18 ~ 2024.11.17&lt;/p&gt;\r\n  &lt;/div&gt;\r\n  &lt;div class=&quot;coupon-right&quot;&gt;\r\n    &lt;button class=&quot;coupon-action&quot;&gt;\r\n      &lt;svg class=&quot;icon&quot;&gt;\r\n        &lt;use xlink:href=&quot;@/assets/images/icons/symbols.svg#barcode&quot;&gt;&lt;/use&gt;\r\n      &lt;/svg&gt;\r\n      &lt;span&gt;사용하기&lt;/span&gt;\r\n    &lt;/button&gt;\r\n  &lt;/div&gt;\r\n&lt;/article&gt;\r\n            </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'toast'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Toast</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Base</h3>\r\n          <div class=\"component-preview\">\r\n            <div class=\"toast-container relative\">\r\n              <div class=\"toast\" role=\"status\">\r\n                <p class=\"toast-content\">\r\n                  <svg class=\"icon\">\r\n                    <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                  </svg>\r\n                  <span>‘아르고스의 과학수업’ 수업을 추가 했습니다.</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=\"toast-container relative\"&gt;\r\n  &lt;div class=\"toast\" role=\"status\"&gt;\r\n    &lt;p class=\"toast-content\"&gt;\r\n      &lt;svg class=\"icon\"&gt;\r\n        &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n      &lt;/svg&gt;\r\n      &lt;span&gt;‘아르고스의 과학수업’ 수업을 추가 했습니다.&lt;/span&gt;\r\n    &lt;/p&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;       \r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Toast Closeable</h3>\r\n          <div class=\"component-preview relative\">\r\n            <article class=\"toast-container\" aria-live=\"polite\" style=\"position: relative; left: 50%\">\r\n              <section class=\"toast closeable\" role=\"status\">\r\n                <p class=\"toast-content\">\r\n                  <svg class=\"icon\" aria-hidden=\"true\">\r\n                    <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                  </svg>\r\n                  <span>‘아르고스의 과학수업’ 수업을 추가 했습니다.</span>\r\n                </p>\r\n                <button class=\"button button_icon button_icon-x-small\" title=\"닫기\" aria-label=\"닫기\" @click=\"showToast = false\">\r\n                  <svg class=\"button__icon\" aria-hidden=\"true\">\r\n                    <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                  </svg>\r\n                </button>\r\n              </section>\r\n            </article>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;article class=\"toast-container\" aria-live=\"polite\"&gt;\r\n  &lt;section class=\"toast closeable\" role=\"status\"&gt;\r\n    &lt;p class=\"toast-content\"&gt;\r\n      &lt;svg class=\"icon\" aria-hidden=\"true\"&gt;\r\n        &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n      &lt;/svg&gt;\r\n      &lt;span&gt;‘아르고스의 과학수업’ 수업을 추가 했습니다.&lt;/span&gt;\r\n    &lt;/p&gt;\r\n    &lt;button class=\"button button_icon button_icon-x-small\" title=\"닫기\" aria-label=\"닫기\" @click=\"showToast = false\"&gt;\r\n      &lt;svg class=\"button__icon\" aria-hidden=\"true\"&gt;\r\n        &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n      &lt;/svg&gt;\r\n    &lt;/button&gt;\r\n  &lt;/section&gt;\r\n&lt;/article&gt;     \r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Transition</h3>\r\n          <h4>Top</h4>\r\n          <div class=\"component-preview relative\">\r\n            <button class=\"button button_outline-primary\" @click=\"triggerToast2\">Show Toast</button>\r\n            <Transition name=\"toast\">\r\n              <article v-if=\"showToast2\" class=\"toast-container top\" aria-live=\"polite\">\r\n                <section class=\"toast closeable\" role=\"status\">\r\n                  <p class=\"toast-content\">\r\n                    <svg class=\"icon\" aria-hidden=\"true\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                    </svg>\r\n                    <span>‘아르고스의 과학수업’ 수업을 추가 했습니다.</span>\r\n                  </p>\r\n                  <button class=\"button button_icon button_icon-x-small\" title=\"닫기\" aria-label=\"닫기\" @click=\"showToast2 = false\">\r\n                    <svg class=\"button__icon\" aria-hidden=\"true\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                    </svg>\r\n                  </button>\r\n                </section>\r\n              </article>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;Transition name=\"toast\"&gt;\r\n  &lt;article v-if=\"showToast\" class=\"toast-container top\" aria-live=\"polite\"&gt;\r\n    &lt;section class=\"toast closeable\" role=\"status\"&gt;\r\n      ...\r\n    &lt;/section&gt;\r\n  &lt;/article&gt;\r\n&lt;/Transition&gt;              \r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Bottom</h4>\r\n          <div class=\"component-preview relative\">\r\n            <button class=\"button button_outline-primary\" @click=\"triggerToast\">Show Toast</button>\r\n            <Transition name=\"toast\">\r\n              <article v-if=\"showToast\" class=\"toast-container bottom\" aria-live=\"polite\">\r\n                <section class=\"toast closeable\" role=\"status\">\r\n                  <p class=\"toast-content\">\r\n                    <svg class=\"icon\" aria-hidden=\"true\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                    </svg>\r\n                    <span>‘아르고스의 과학수업’ 수업을 추가 했습니다.</span>\r\n                  </p>\r\n                  <button class=\"button button_icon button_icon-x-small\" title=\"닫기\" aria-label=\"닫기\" @click=\"showToast = false\">\r\n                    <svg class=\"button__icon\" aria-hidden=\"true\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                    </svg>\r\n                  </button>\r\n                </section>\r\n              </article>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;Transition name=\"toast\"&gt;\r\n  &lt;article v-if=\"showToast\" class=\"toast-container bottom\" aria-live=\"polite\"&gt;\r\n    &lt;section class=\"toast closeable\" role=\"status\"&gt;\r\n      ...\r\n    &lt;/section&gt;\r\n  &lt;/article&gt;\r\n&lt;/Transition&gt;          \r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>With SNB</h4>\r\n          <p class=\"docs-desc\">사이드바가 있는 화면에서 포지션 변경을 위해 <code class=\"doc\">.with-snb</code> 적용</p>\r\n          <div class=\"component-preview relative\">\r\n            <button class=\"button button_outline-primary\" @click=\"triggerToast3\">Show Toast</button>\r\n            <Transition name=\"toast\">\r\n              <article v-if=\"showToast3\" class=\"toast-container bottom with-snb\" aria-live=\"polite\">\r\n                <section class=\"toast\" role=\"status\">\r\n                  <p class=\"toast-content\">\r\n                    <svg class=\"icon\" aria-hidden=\"true\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                    </svg>\r\n                    <span>‘아르고스의 과학수업’ 수업을 추가 했습니다.</span>\r\n                  </p>\r\n                </section>\r\n              </article>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;Transition name=\"toast\"&gt;\r\n  &lt;article v-if=\"showToast\" class=\"toast-container bottom with-snb\" aria-live=\"polite\"&gt;\r\n    &lt;section class=\"toast\" role=\"status\"&gt;\r\n      ...\r\n    &lt;/section&gt;\r\n  &lt;/article&gt;\r\n&lt;/Transition&gt;              \r\n            </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'dialog'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Dialog</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Base</h3>\r\n          <div class=\"component-preview\">\r\n            <button class=\"button button_outline-primary\" @click=\"showModal1 = true\">Modal Open</button>\r\n            <Transition name=\"fade\">\r\n              <section v-if=\"showModal1\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\">\r\n                <div class=\"modal-dialog lg\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 id=\"modal-heading-01\" class=\"modal-title\" tabindex=\"-1\">모달 제목</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\" id=\"modal-content-id-1\">\r\n                      <p>모달 내용</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button class=\"button button_outline-primary button_large\" @click=\"showModal1 = false\">취소</button>\r\n                      <button class=\"button button_primary button_large\">확인</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;Transition name=\"fade\"&gt;\r\n  &lt;section v-if=\"showModal1\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\"&gt;\r\n    &lt;div class=\"modal-dialog lg\"&gt;\r\n      &lt;div class=\"modal-content\"&gt;\r\n        &lt;div class=\"modal-header\"&gt;\r\n          &lt;h5 id=\"modal-heading-01\" class=\"modal-title\" tabindex=\"-1\"&gt;\r\n            모달 제목\r\n          &lt;/h5&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=\"modal-body\" id=\"modal-content-id-1\"&gt;\r\n          &lt;p&gt;모달 내용&lt;/p&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=\"modal-footer\"&gt;\r\n          &lt;button class=\"button button_outline-primary button_large\" @click=\"showModal1 = false\"&gt;\r\n            취소\r\n          &lt;/button&gt;\r\n          &lt;button class=\"button button_primary button_large\"&gt;\r\n            확인\r\n          &lt;/button&gt;\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n  &lt;/section&gt;\r\n&lt;/Transition&gt;\r\n\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Sizing</h3>\r\n          <h4>Small</h4>\r\n          <p class=\"docs-desc\">Alert에 사용되는 Small 사이즈 다이얼로그</p>\r\n          <ul class=\"docs-list\">\r\n            <li>320px</li>\r\n            <li>요소 간격 24px과 중앙 정렬 스타일이 포함됨</li>\r\n            <li>버튼 사이즈 default (40px)</li>\r\n            <li>modal-dialog 에 <code class=\"doc\">sm</code> 클래스 적용</li>\r\n          </ul>\r\n          <div class=\"component-preview\">\r\n            <button class=\"button button_outline-primary\" @click=\"showModal2 = true\">Modal Open</button>\r\n            <!-- Small 사이즈: Alert 모달 -->\r\n            <Transition name=\"fade\">\r\n              <section v-if=\"showModal2\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\">\r\n                <div class=\"modal-dialog sm\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 id=\"modal-heading-01\" class=\"modal-title\" tabindex=\"-1\">모달 제목</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\" id=\"modal-content-id-1\">\r\n                      <p>모달 내용</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button class=\"button button_primary\" @click=\"showModal2 = false\">확인</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;section role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\"&gt;\r\n  &lt;div class=\"modal-dialog sm\"&gt;\r\n    ...\r\n  &lt;/div&gt;\r\n&lt;/section&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Medium</h4>\r\n          <p class=\"docs-desc\">채팅방 설정, 파일 전송 시 사용되는 Medium 사이즈 다이얼로그</p>\r\n          <ul class=\"docs-list\">\r\n            <li>360px</li>\r\n            <li>modal-dialog 에 <code class=\"doc\">md</code> 클래스 적용</li>\r\n          </ul>\r\n          <div class=\"component-preview\">\r\n            <button class=\"button button_outline-primary\" @click=\"showModal3 = true\">Modal Open</button>\r\n            <!-- Medium 사이즈: 채팅 설정, 파일 첨부 모달 -->\r\n            <Transition name=\"fade\">\r\n              <section v-if=\"showModal3\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\">\r\n                <div class=\"modal-dialog md\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 id=\"modal-heading-01\" class=\"modal-title\" tabindex=\"-1\">모달 제목</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\" id=\"modal-content-id-1\">\r\n                      <p>모달 내용</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button class=\"button button_primary button_large\" @click=\"showModal3 = false\">전송</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;section role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\"&gt;\r\n  &lt;div class=\"modal-dialog md\"&gt;\r\n    ...\r\n  &lt;/div&gt;\r\n&lt;/section&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Large</h4>\r\n          <p class=\"docs-desc\">Confirm 또는 사용자 입력(예: 폼 작성)에 사용되는 Large 사이즈 다이얼로그</p>\r\n          <ul class=\"docs-list\">\r\n            <li>480px</li>\r\n            <li>modal-dialog 에 <code class=\"doc\">lg</code> 클래스 적용</li>\r\n          </ul>\r\n          <div class=\"component-preview\">\r\n            <button class=\"button button_outline-primary\" @click=\"showModal4 = true\">Modal Open</button>\r\n            <!-- Large 사이즈: Confirm 및 사용자 입력 모달 -->\r\n            <Transition name=\"fade\">\r\n              <section v-if=\"showModal4\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\">\r\n                <div class=\"modal-dialog lg\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 id=\"modal-heading-01\" class=\"modal-title\" tabindex=\"-1\">모달 제목</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\" id=\"modal-content-id-1\">\r\n                      <p>모달 내용</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button class=\"button button_outline-primary button_large\" @click=\"showModal4 = false\">취소</button>\r\n                      <button class=\"button button_primary button_large\">확인</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;section role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\"&gt;\r\n  &lt;div class=\"modal-dialog lg\"&gt;\r\n    ...\r\n  &lt;/div&gt;\r\n&lt;/section&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>X-Large</h4>\r\n          <p class=\"docs-desc\">내 화면 공유에 사용되는 X-Large 사이즈 다이얼로그</p>\r\n          <ul class=\"docs-list\">\r\n            <li>720px</li>\r\n            <li>modal-dialog 에 <code class=\"doc\">x-lg</code> 클래스 적용</li>\r\n          </ul>\r\n          <div class=\"component-preview\">\r\n            <button class=\"button button_outline-primary\" @click=\"showModal5 = true\">Modal Open</button>\r\n            <!-- X-Large 사이즈: 화면 공유 모달 -->\r\n            <Transition name=\"fade\">\r\n              <section v-if=\"showModal5\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\">\r\n                <div class=\"modal-dialog x-lg\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 id=\"modal-heading-01\" class=\"modal-title\" tabindex=\"-1\">모달제목</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\" id=\"modal-content-id-1\">\r\n                      <p>모달 내용</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button class=\"button button_outline-primary button_large\" @click=\"showModal5 = false\">취소</button>\r\n                      <button class=\"button button_primary button_large\">확인</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;section role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\"&gt;\r\n  &lt;div class=\"modal-dialog x-lg\"&gt;\r\n    ...\r\n  &lt;/div&gt;\r\n&lt;/section&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>XX-Large</h4>\r\n          <p class=\"docs-desc\">페이징 테이블에 사용되는 XX-Large 사이즈 다이얼로그</p>\r\n          <ul class=\"docs-list\">\r\n            <li>960px</li>\r\n            <li>modal-dialog 에 <code class=\"doc\">xx-lg</code> 클래스 적용</li>\r\n          </ul>\r\n          <div class=\"component-preview\">\r\n            <button class=\"button button_outline-primary\" @click=\"showModal5 = true\">Modal Open</button>\r\n            <!-- XX-Large 사이즈: 페이징 테이블 모달 -->\r\n            <Transition name=\"fade\">\r\n              <section v-if=\"showModal5\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\">\r\n                <div class=\"modal-dialog xx-lg\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 id=\"modal-heading-01\" class=\"modal-title\" tabindex=\"-1\">모달제목</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\" id=\"modal-content-id-1\">\r\n                      <p>모달 내용</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button class=\"button button_outline-primary button_large\" @click=\"showModal5 = false\">취소</button>\r\n                      <button class=\"button button_primary button_large\">확인</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;section role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\"&gt;\r\n  &lt;div class=\"modal-dialog xx-lg\"&gt;\r\n    ...\r\n  &lt;/div&gt;\r\n&lt;/section&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>Transition</h3>\r\n          <h4>Default (Fade In/Out)</h4>\r\n          <p class=\"docs-desc\"></p>\r\n          <ul class=\"docs-list\">\r\n            <li>Transition에 <code class=\"doc\">fade</code> 적용</li>\r\n          </ul>\r\n          <div class=\"component-preview\">\r\n            <button class=\"button button_outline-primary\" @click=\"showModal6 = true\">Modal Open</button>\r\n            <Transition name=\"fade\">\r\n              <section v-if=\"showModal6\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\">\r\n                <div class=\"modal-dialog lg\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 id=\"modal-heading-01\" class=\"modal-title\" tabindex=\"-1\">모달제목</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\" id=\"modal-content-id-1\">\r\n                      <p>모달 내용</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button class=\"button button_outline-primary button_large\" @click=\"showModal6 = false\">취소</button>\r\n                      <button class=\"button button_primary button_large\">확인</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;Transition name=\"fade\"&gt;\r\n  ...\r\n&lt;/Transition&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Zoom In/Out</h4>\r\n          <p class=\"docs-desc\">등장 시 확대(Zoom In), 퇴장 시 축소(Zoom Out)</p>\r\n          <ul class=\"docs-list\">\r\n            <li>Transition에 <code class=\"doc\">zoom</code> 적용</li>\r\n          </ul>\r\n          <div class=\"component-preview\">\r\n            <button class=\"button button_outline-primary\" @click=\"showModal7 = true\">Modal Open</button>\r\n            <Transition name=\"zoom\">\r\n              <section v-if=\"showModal7\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\">\r\n                <div class=\"modal-dialog lg\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 id=\"modal-heading-01\" class=\"modal-title\" tabindex=\"-1\">모달제목</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\" id=\"modal-content-id-1\">\r\n                      <p>모달 내용</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button class=\"button button_outline-primary button_large\" @click=\"showModal7 = false\">취소</button>\r\n                      <button class=\"button button_primary button_large\">확인</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;Transition name=\"zoom\"&gt;\r\n  ...\r\n&lt;/Transition&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>Zoom Out/In</h4>\r\n          <p class=\"docs-desc\">등장 시 축소(Zoom Out), 퇴장 시 확대(Zoom In)</p>\r\n          <ul class=\"docs-list\">\r\n            <li>Transition에 <code class=\"doc\">zoom-reverse</code> 적용</li>\r\n          </ul>\r\n          <div class=\"component-preview\">\r\n            <button class=\"button button_outline-primary\" @click=\"showModal8 = true\">Modal Open</button>\r\n            <Transition name=\"zoom-reverse\">\r\n              <section v-if=\"showModal8\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" aria-labelledby=\"modal-heading-01\" class=\"modal\">\r\n                <div class=\"modal-dialog lg\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <h5 id=\"modal-heading-01\" class=\"modal-title\" tabindex=\"-1\">모달제목</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\" id=\"modal-content-id-1\">\r\n                      <p>모달 내용</p>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                      <button class=\"button button_outline-primary button_large\" @click=\"showModal8 = false\">취소</button>\r\n                      <button class=\"button button_primary button_large\">확인</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;Transition name=\"zoom-reverse\"&gt;\r\n  ...\r\n&lt;/Transition&gt;\r\n            </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'alert'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Alert</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Alert</h3>\r\n          <div class=\"component-preview\">\r\n            <Transition name=\"alert\">\r\n              <article v-show=\"isAlert\" class=\"alert\" aria-live=\"polite\">\r\n                <div class=\"alert-inner closeable\" role=\"alert\">\r\n                  <p class=\"alert-content\">\r\n                    <svg class=\"icon\" aria-hidden=\"true\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#bluetooth\"></use>\r\n                    </svg>\r\n                    <span>블루투스를 켜고 주변 상점 쿠폰을 받아보세요!</span>\r\n                  </p>\r\n                  <button class=\"btn-icon\" title=\"닫기\" aria-label=\"닫기\" @click=\"closeAlert\">\r\n                    <svg aria-hidden=\"true\">\r\n                      <use xlink:href=\"@/assets/images/icons/symbols.svg#close_16\"></use>\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </article>\r\n            </Transition>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;Transition name=&quot;alert&quot;&gt;\r\n  &lt;article v-show=&quot;isAlert&quot; class=&quot;alert&quot; aria-live=&quot;polite&quot;&gt;\r\n    &lt;div class=&quot;alert-inner closeable&quot; role=&quot;alert&quot;&gt;\r\n      &lt;p class=&quot;alert-content&quot;&gt;\r\n        &lt;svg class=&quot;icon&quot; aria-hidden=&quot;true&quot;&gt;\r\n          &lt;use xlink:href=&quot;&#64;/assets/images/icons/symbols.svg#bluetooth&quot;&gt;&lt;/use&gt;\r\n        &lt;/svg&gt;\r\n        &lt;span&gt;블루투스를 켜고 주변 상점 쿠폰을 받아보세요!&lt;/span&gt;\r\n      &lt;/p&gt;\r\n      &lt;button class=&quot;btn-icon&quot; title=&quot;닫기&quot; aria-label=&quot;닫기&quot; @click=&quot;closeAlert&quot;&gt;\r\n        &lt;svg aria-hidden=&quot;true&quot;&gt;\r\n          &lt;use xlink:href=&quot;&#64;/assets/images/icons/symbols.svg#close_16&quot;&gt;&lt;/use&gt;\r\n        &lt;/svg&gt;\r\n      &lt;/button&gt;\r\n    &lt;/div&gt;\r\n  &lt;/article&gt;\r\n&lt;/Transition&gt;\r\n            </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'bottomsheet'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Bottom Sheet</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Bottom Sheet</h3>\r\n          <h4>Default</h4>\r\n          <div class=\"component-preview\">\r\n            <button class=\"btn primary\" @click=\"isBottomSheet = true\">Bottom Sheet</button>\r\n            <Transition name=\"bottom-sheet\">\r\n              <div v-if=\"isBottomSheet\" class=\"bottom-sheet-wrapper\">\r\n                <!-- 배경 오버레이 -->\r\n                <div class=\"bottom-sheet-overlay\"></div>\r\n\r\n                <!-- 바텀시트 본체 -->\r\n                <div class=\"bottom-sheet\">\r\n                  <!-- 바텀시트 헤더: 타입별 클래스 적용 -->\r\n                  <div class=\"bottom-sheet-header\">\r\n                    <button class=\"btn-icon\" @click=\"isBottomSheet = false\">\r\n                      <svg class=\"icon\">\r\n                        <use xlink:href=\"@/assets/images/icons/symbols.svg#close\"></use>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"bottom-sheet-content with-image qr\">\r\n                    <p class=\"title-01-b\">\r\n                      QR코드 스캔하고<br />\r\n                      중앙시장APP 친구와 함께 써요\r\n                    </p>\r\n                    <figure class=\"pic-area\">\r\n                      <img src=\"@/assets/images/temp/qr_sample.png\" alt=\"QR 코드\" />\r\n                    </figure>\r\n                  </div>\r\n                  <div class=\"bottom-sheet-footer\">\r\n                    <div class=\"btn-area\">\r\n                      <button class=\"btn with-icon\">\r\n                        <svg class=\"icon sm\">\r\n                          <use xlink:href=\"@/assets/images/icons/symbols.svg#share\"></use></svg>공유하기\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Transition>\r\n          </div>\r\n\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h4>With Title</h4>\r\n          <div class=\"component-preview\">\r\n            <button class=\"btn primary\" @click=\"isBottomSheet2 = true\">Bottom Sheet</button>\r\n            <Transition name=\"bottom-sheet\">\r\n              <div v-if=\"isBottomSheet2\" class=\"bottom-sheet-wrapper\">\r\n                <!-- 배경 오버레이 -->\r\n                <div class=\"bottom-sheet-overlay\"></div>\r\n\r\n                <!-- 바텀시트 본체 -->\r\n                <div class=\"bottom-sheet\">\r\n                  <!-- 바텀시트 헤더: 타입별 클래스 적용 -->\r\n                  <div class=\"bottom-sheet-header with-title\">\r\n                    <h2 class=\"title\">필수 권한 설정 안내</h2>\r\n                    <button class=\"btn-icon\" @click=\"isBottomSheet2 = false\">\r\n                      <svg class=\"icon\">\r\n                        <use xlink:href=\"@/assets/images/icons/symbols.svg#close\"></use>\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"bottom-sheet-content with-image qr\">\r\n                    <p class=\"title-01-b\">\r\n                      QR코드 스캔하고<br />\r\n                      중앙시장APP 친구와 함께 써요\r\n                    </p>\r\n                    <figure class=\"pic-area\">\r\n                      <img src=\"@/assets/images/temp/qr_sample.png\" alt=\"QR 코드\" />\r\n                    </figure>\r\n                  </div>\r\n                  <div class=\"bottom-sheet-footer\">\r\n                    <div class=\"btn-area\">\r\n                      <button class=\"btn secondary\" @click=\"isBottomSheet2 = false\">나중에 하기</button>\r\n                      <button class=\"btn primary\">권한 설정하기</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Transition>\r\n          </div>\r\n\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n\r\n            </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <div v-show=\"activePubComponent === 'tabs'\" class=\"component-section\">\r\n        <section class=\"component-header\">\r\n          <h2>Tabs</h2>\r\n          <ul>\r\n            <li>HTML/CSS: Dev Ready</li>\r\n            <li>Mobile</li>\r\n          </ul>\r\n        </section>\r\n        <section class=\"component-main\">\r\n          <h3>Base</h3>\r\n          <p class=\"docs-desc\">사용안함 (퍼블 확인용)</p>\r\n          <div class=\"component-preview\">\r\n            <div class=\"tabs\">\r\n              <ul class=\"tabs__nav\" role=\"tablist\">\r\n                <li class=\"tabs__item is-active\" title=\"Item One\" role=\"presentation\">\r\n                  <button class=\"tabs__link\" href=\"#\" role=\"tab\" tabindex=\"0\" aria-selected=\"true\" aria-controls=\"tab-1\" id=\"tab-1__item\">Item One</button>\r\n                </li>\r\n                <li class=\"tabs__item\" title=\"Item Two\" role=\"presentation\">\r\n                  <button class=\"tabs__link\" href=\"#\" role=\"tab\" tabindex=\"-1\" aria-selected=\"false\" aria-controls=\"tab-2\" id=\"tab-2__item\">Item Two</button>\r\n                </li>\r\n                <li class=\"tabs__item\" title=\"Item \" role=\"presentation\">\r\n                  <button class=\"tabs__link\" href=\"#\" role=\"tab\" tabindex=\"-1\" aria-selected=\"false\" aria-controls=\"tab-3\" id=\"tab-3__item\">Item</button>\r\n                </li>\r\n              </ul>\r\n              <div id=\"tab-1\" class=\"tabs__content show\" role=\"tabpanel\" aria-labelledby=\"tab-1__item\">Item One Content</div>\r\n              <div id=\"tab-2\" class=\"tabs__content hide\" role=\"tabpanel\" aria-labelledby=\"tab-2__item\">Item Two Content</div>\r\n              <div id=\"tab-3\" class=\"tabs__content hide\" role=\"tabpanel\" aria-labelledby=\"tab-3__item\">Item Content</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=\"tabs\"&gt;\r\n  &lt;ul class=\"tabs__nav\" role=\"tablist\"&gt;\r\n    &lt;li class=\"tabs__item is-active\" title=\"Item One\" role=\"presentation\"&gt;\r\n      &lt;button class=\"tabs__link\" href=\"#\" role=\"tab\" tabindex=\"0\" aria-selected=\"true\" aria-controls=\"tab-1\" id=\"tab-1__item\"&gt;Item One&lt;/button&gt;\r\n    &lt;/li&gt;\r\n    &lt;li class=\"tabs__item\" title=\"Item Two\" role=\"presentation\"&gt;\r\n      &lt;button class=\"tabs__link\" href=\"#\" role=\"tab\" tabindex=\"-1\" aria-selected=\"false\" aria-controls=\"tab-2\" id=\"tab-2__item\"&gt;Item Two&lt;/button&gt;\r\n    &lt;/li&gt;\r\n    &lt;li class=\"tabs__item\" title=\"Item \" role=\"presentation\"&gt;\r\n      &lt;button class=\"tabs__link\" href=\"#\" role=\"tab\" tabindex=\"-1\" aria-selected=\"false\" aria-controls=\"tab-3\" id=\"tab-3__item\"&gt;Item &lt;/button&gt;\r\n    &lt;/li&gt;\r\n  &lt;/ul&gt;\r\n  &lt;div id=\"tab-1\" class=\"tabs__content show\" role=\"tabpanel\" aria-labelledby=\"tab-1__item\"&gt;\r\n    Item One Content\r\n  &lt;/div&gt;\r\n  &lt;div id=\"tab-2\" class=\"tabs__content hide\" role=\"tabpanel\" aria-labelledby=\"tab-2__item\"&gt;\r\n    Item Two Content\r\n  &lt;/div&gt;\r\n  &lt;div id=\"tab-3\" class=\"tabs__content hide\" role=\"tabpanel\" aria-labelledby=\"tab-3__item\"&gt;\r\n    Item  Content\r\n  &lt;/div&gt;\r\n&lt;/div&gt;            \r\n            </code></pre>\r\n          </div>\r\n          <h3>With Icon</h3>\r\n          <p class=\"docs-desc\">탭의 컨테이너에 flex속성 <code class=\"doc\">.tabs_flex</code>를 추가한다. 아이콘 탭으로 변경하기 위해 <code class=\"doc\">.tabs__with-icon</code>를 추가한다.</p>\r\n          <div class=\"component-preview\">\r\n            <div style=\"width: 320px\">\r\n              <div class=\"tabs tabs_flex\">\r\n                <ul class=\"tabs__nav\" role=\"tablist\">\r\n                  <li class=\"tabs__item\" :class=\"{ 'is-active': activeTabIcon === 0 }\" title=\"채팅\" role=\"presentation\">\r\n                    <button class=\"tabs__link tabs__with-icon\" role=\"tab\" tabindex=\"0\" :aria-selected=\"activeTabIcon === 0\" aria-controls=\"tab-1\" id=\"tab-1__item\" @click=\"activeTabIcon = 0\">\r\n                      <svg class=\"icon\">\r\n                        <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                      </svg>\r\n                      <b class=\"tabs__label\">채팅</b>\r\n                    </button>\r\n                  </li>\r\n                  <li class=\"tabs__item\" :class=\"{ 'is-active': activeTabIcon === 1 }\" title=\"학생\" role=\"presentation\">\r\n                    <button class=\"tabs__link tabs__with-icon\" role=\"tab\" tabindex=\"-1\" :aria-selected=\"activeTabIcon === 1\" aria-controls=\"tab-2\" id=\"tab-2__item\" @click=\"activeTabIcon = 1\">\r\n                      <svg class=\"icon\">\r\n                        <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                      </svg>\r\n                      <b class=\"tabs__label\">학생</b>\r\n                    </button>\r\n                  </li>\r\n                  <li class=\"tabs__item\" :class=\"{ 'is-active': activeTabIcon === 2 }\" title=\"정보\" role=\"presentation\">\r\n                    <button class=\"tabs__link tabs__with-icon\" role=\"tab\" tabindex=\"-1\" :aria-selected=\"activeTabIcon === 2\" aria-controls=\"tab-3\" id=\"tab-3__item\" @click=\"activeTabIcon = 2\">\r\n                      <svg class=\"icon\">\r\n                        <use xlink:href=\"@/assets/images/icons/symbols.svg#sample\"></use>\r\n                      </svg>\r\n                      <b class=\"tabs__label\">정보</b>\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n                <div id=\"tab-1\" class=\"tabs__content\" role=\"tabpanel\" aria-labelledby=\"tab-1__item\" v-show=\"activeTabIcon === 0\">Item One Content</div>\r\n                <div id=\"tab-2\" class=\"tabs__content\" role=\"tabpanel\" aria-labelledby=\"tab-2__item\" v-show=\"activeTabIcon === 1\">Item Two Content</div>\r\n                <div id=\"tab-3\" class=\"tabs__content\" role=\"tabpanel\" aria-labelledby=\"tab-3__item\" v-show=\"activeTabIcon === 2\">Item Content</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=\"tabs tabs_flex\"&gt;\r\n  &lt;ul class=\"tabs__nav\" role=\"tablist\"&gt;\r\n    &lt;li class=\"tabs__item is-active\" title=\"채팅\" role=\"presentation\"&gt;\r\n      &lt;button class=\"tabs__link tabs__with-icon\" href=\"#\" role=\"tab\" tabindex=\"0\" aria-selected=\"true\" aria-controls=\"tab-1\" id=\"tab-1__item\"&gt;\r\n        &lt;svg class=\"icon\"&gt;\r\n          &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n        &lt;/svg&gt;\r\n        &lt;b class=\"tabs__label\"&gt;채팅&lt;/b&gt;\r\n      &lt;/button&gt;\r\n    &lt;/li&gt;\r\n    &lt;li class=\"tabs__item\" title=\"학생\" role=\"presentation\"&gt;\r\n      &lt;button class=\"tabs__link tabs__with-icon\" href=\"#\" role=\"tab\" tabindex=\"-1\" aria-selected=\"false\" aria-controls=\"tab-2\" id=\"tab-2__item\"&gt;\r\n        &lt;svg class=\"icon\"&gt;\r\n          &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n        &lt;/svg&gt;\r\n        &lt;b class=\"tabs__label\"&gt;학생&lt;/b&gt;\r\n      &lt;/button&gt;\r\n    &lt;/li&gt;\r\n    &lt;li class=\"tabs__item\" title=\"정보\" role=\"presentation\"&gt;\r\n      &lt;button class=\"tabs__link tabs__with-icon\" href=\"#\" role=\"tab\" tabindex=\"-1\" aria-selected=\"false\" aria-controls=\"tab-3\" id=\"tab-3__item\"&gt;\r\n        &lt;svg class=\"icon\"&gt;\r\n          &lt;use xlink:href=\"&#64;/assets/images/icons/symbols.svg#sample\"&gt;&lt;/use&gt;\r\n        &lt;/svg&gt;\r\n        &lt;b class=\"tabs__label\"&gt;정보&lt;/b&gt;\r\n      &lt;/button&gt;\r\n    &lt;/li&gt;\r\n  &lt;/ul&gt;\r\n  &lt;div id=\"tab-1\" class=\"tabs__content show\" role=\"tabpanel\" aria-labelledby=\"tab-1__item\"&gt;\r\n    Item One Content\r\n  &lt;/div&gt;\r\n  &lt;div id=\"tab-2\" class=\"tabs__content hide\" role=\"tabpanel\" aria-labelledby=\"tab-2__item\"&gt;\r\n    Item Two Content\r\n  &lt;/div&gt;\r\n  &lt;div id=\"tab-3\" class=\"tabs__content hide\" role=\"tabpanel\" aria-labelledby=\"tab-3__item\"&gt;\r\n    Item  Content\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n            </code></pre>\r\n          </div>\r\n\r\n          <h3>화면공유 탭</h3>\r\n          <p class=\"docs-desc\">탭의 컨테이너에 <code class=\"doc\">.share</code> 추가됨</p>\r\n          <div class=\"component-preview\">\r\n            <div class=\"tabs share\" style=\"max-width: 656px\">\r\n              <ul class=\"tabs__nav\" role=\"tablist\">\r\n                <li class=\"tabs__item\" :class=\"{ 'is-active': activeTab === 0 }\" role=\"presentation\">\r\n                  <button class=\"tabs__link\" role=\"tab\" tabindex=\"0\" :aria-selected=\"activeTab === 0\" aria-controls=\"tab-1\" id=\"tab-1__item\" @click=\"activeTab = 0\">\r\n                    <span>모니터</span>\r\n                    <i class=\"icon-check\"></i>\r\n                  </button>\r\n                </li>\r\n                <li class=\"tabs__item\" :class=\"{ 'is-active': activeTab === 1 }\" role=\"presentation\">\r\n                  <button class=\"tabs__link\" role=\"tab\" tabindex=\"-1\" :aria-selected=\"activeTab === 1\" aria-controls=\"tab-2\" id=\"tab-2__item\" @click=\"activeTab = 1\">\r\n                    <span>창</span>\r\n                    <i class=\"icon-check\"></i>\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n\r\n              <div id=\"tab-1\" class=\"tabs__content\" role=\"tabpanel\" aria-labelledby=\"tab-1__item\" v-show=\"activeTab === 0\">\r\n                <p style=\"text-align: center\">Contents1</p>\r\n              </div>\r\n              <div id=\"tab-2\" class=\"tabs__content\" role=\"tabpanel\" aria-labelledby=\"tab-2__item\" v-show=\"activeTab === 1\">\r\n                <p style=\"text-align: center\">Contents2</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"code-block\">\r\n            <div class=\"action-bar\"><button class=\"copy-button\" @click=\"copyToClipboardPub($event)\">Copy</button></div>\r\n            <pre><code ref=\"code\" class=\"language-html\">\r\n&lt;div class=\"tabs share\"&gt;\r\n  &lt;ul class=\"tabs__nav\" role=\"tablist\"&gt;\r\n    &lt;li class=\"tabs__item\" :class=\"{ 'is-active': activeTab === 0 }\" role=\"presentation\"&gt;\r\n      &lt;button\r\n        class=\"tabs__link\"\r\n        role=\"tab\"\r\n        tabindex=\"0\"\r\n        :aria-selected=\"activeTab === 0\"\r\n        aria-controls=\"tab-1\"\r\n        id=\"tab-1__item\"\r\n        @click=\"activeTab = 0\"\r\n      &gt;\r\n        &lt;span&gt;모니터&lt;/span&gt;\r\n        &lt;i class=\"icon-check\"&gt;&lt;/i&gt;\r\n      &lt;/button&gt;\r\n    &lt;/li&gt;\r\n    &lt;li class=\"tabs__item\" :class=\"{ 'is-active': activeTab === 1 }\" role=\"presentation\"&gt;\r\n      &lt;button\r\n        class=\"tabs__link\"\r\n        role=\"tab\"\r\n        tabindex=\"-1\"\r\n        :aria-selected=\"activeTab === 1\"\r\n        aria-controls=\"tab-2\"\r\n        id=\"tab-2__item\"\r\n        @click=\"activeTab = 1\"\r\n      &gt;\r\n        &lt;span&gt;창&lt;/span&gt;\r\n        &lt;i class=\"icon-check\"&gt;&lt;/i&gt;\r\n      &lt;/button&gt;\r\n    &lt;/li&gt;\r\n  &lt;/ul&gt;\r\n\r\n  &lt;div id=\"tab-1\" class=\"tabs__content\" role=\"tabpanel\" aria-labelledby=\"tab-1__item\" v-show=\"activeTab === 0\"&gt;\r\n    &lt;section class=\"share-container\"&gt;\r\n      Contents1\r\n    &lt;/section&gt;\r\n  &lt;/div&gt;\r\n  &lt;div id=\"tab-2\" class=\"tabs__content\" role=\"tabpanel\" aria-labelledby=\"tab-2__item\" v-show=\"activeTab === 1\"&gt;\r\n    &lt;section class=\"share-container\"&gt;\r\n      Contents2\r\n    &lt;/section&gt;\r\n  &lt;/div&gt;\r\n&lt;/div&gt;\r\n            </code></pre>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n      <!-- 추가 섹션들 -->\r\n    </main>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUpdated } from \"vue\";\r\n// ## 퍼블리싱 작업용 의존성 설치\r\nimport Prism from \"prismjs\";\r\nimport \"prismjs/components/prism-javascript\";\r\nimport \"prismjs/themes/prism-coy.css\";\r\n\r\nconst isSNB = ref(true);\r\nconst isAlert = ref(true);\r\nconst isBottomSheet = ref(false);\r\nconst isBottomSheet2 = ref(false);\r\n\r\nconst onClickToggle = () => {\r\n  isSNB.value = !isSNB.value;\r\n};\r\n\r\n// 알럿 배너 닫기\r\nconst closeAlert = () => {\r\n  isAlert.value = false;\r\n};\r\n\r\n// 사이드바 링크\r\nconst activePubComponent = ref(\"bottomsheet\");\r\nconst SidebarPubLinks = [\r\n  { name: \"Design Token\", component: \"token\" },\r\n  { name: \"Icon\", component: \"icon\" },\r\n  { name: \"Button\", component: \"button\" },\r\n  { name: \"Button Icon\", component: \"buttonicons\" },\r\n  { name: \"Form Control\", component: \"form\" },\r\n  { name: \"Select\", component: \"select\" },\r\n  { name: \"Checkbox\", component: \"checkbox\" },\r\n  // { name: \"Badge\", component: \"badge\" },\r\n  // { name: \"Toast\", component: \"toast\" },\r\n  // { name: \"Dialog\", component: \"dialog\" },\r\n  { name: \"Alert\", component: \"alert\" },\r\n  { name: \"Bottom Sheet\", component: \"bottomsheet\" },\r\n  { name: \"Coupon\", component: \"coupon\" },\r\n  // { name: \"Tab\", component: \"tabs\" },\r\n  { name: \"Header\", component: \"header\" },\r\n];\r\n\r\n// 코드 블록 하이라이팅\r\nconst highlightPubCode = () => {\r\n  const codeBlocks = document.querySelectorAll(\"code\");\r\n  codeBlocks.forEach((block) => {\r\n    Prism.highlightElement(block);\r\n  });\r\n};\r\n\r\n// 클립보드에 복사\r\nconst copyToClipboardPub = (event) => {\r\n  const codeBlock = event.target.closest(\".code-block\").querySelector(\"code\").innerText.trim();\r\n\r\n  const tempTextArea = document.createElement(\"textarea\");\r\n  tempTextArea.value = codeBlock;\r\n  document.body.appendChild(tempTextArea);\r\n\r\n  tempTextArea.select();\r\n  tempTextArea.setSelectionRange(0, 99999);\r\n\r\n  document.execCommand(\"copy\");\r\n  document.body.removeChild(tempTextArea);\r\n\r\n  const button = event.target;\r\n  const originalText = button.innerText;\r\n  button.innerText = \"Copied!\";\r\n  setTimeout(() => {\r\n    button.innerText = originalText;\r\n  }, 1000);\r\n};\r\n\r\n// 라이프사이클 훅\r\nonMounted(() => {\r\n  highlightPubCode();\r\n});\r\n\r\nonUpdated(() => {\r\n  highlightPubCode();\r\n});\r\n</script>\r\n","import script from \"./StyleGuide.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./StyleGuide.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["Prism","languages","javascript","extend","clike","pattern","lookbehind","RegExp","source","insertBefore","greedy","inside","alias","regex","rest","markup","tag","addInlined","addAttribute","js","_self","window","WorkerGlobalScope","self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","m","exec","className","toLowerCase","parentElement","setLanguage","language","classList","add","currentScript","document","Error","err","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","plain","plaintext","text","txt","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","all","name","push","callbacks","length","matchedStr","matchPattern","pos","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","currentNode","next","tail","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","list","node","newNode","count","array","s","e","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","module","exports","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","string","css","Element","matches","msMatchesSelector","webkitMatchesSelector","LOADING_MESSAGE","FAILURE_MESSAGE","status","FAILURE_EMPTY_MESSAGE","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","STATUS_FAILED","SELECTOR","pre","appendChild","createElement","getAttribute","extension","autoloader","loadLanguages","loadFile","range","parseRange","lines","split","start","end","Math","max","min","String","error","fileHighlight","logged","console","warn","arguments","success","xhr","XMLHttpRequest","open","onreadystatechange","responseText","statusText","send","Number","comma","undefined","isSNB","ref","isAlert","isBottomSheet","isBottomSheet2","onClickToggle","closeAlert","activePubComponent","SidebarPubLinks","component","highlightPubCode","codeBlocks","block","copyToClipboardPub","event","codeBlock","target","closest","querySelector","innerText","trim","tempTextArea","body","select","setSelectionRange","execCommand","removeChild","button","originalText","onMounted","onUpdated","__exports__"],"sourceRoot":""}